<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
     <!--Generates a package at build--> 
    <IncludeBuildOutput>false</IncludeBuildOutput>
     <!--Do not include the generator as a lib dependency-->
    <Nullable>enable</Nullable>
    <ImplicitUsings>true</ImplicitUsings>
    <LangVersion>Latest</LangVersion>
  </PropertyGroup>

  <ItemGroup>
    <!-- Take a private dependency on Newtonsoft.Json (PrivateAssets=all) Consumers of this generator will not reference it.
         Set GeneratePathProperty=true so we can reference the binaries via the PKGNewtonsoft_Json property -->
    <PackageReference Include="Esprima" Version="2.1.3" PrivateAssets="all" GeneratePathProperty="true" />
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.2.0" PrivateAssets="all" />

    <!-- Package the generator in the analyzer directory of the nuget package -->
    <!--<None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />-->

    <!-- Package the Newtonsoft.Json dependency alongside the generator assembly -->
    <!--<None Include="$(PkgEsprima)\lib\netstandard2.0\Esprima.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />-->
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="$(PkgEsprima)\lib\netstandard2.0\Esprima.dll" Visible="false" />
  </ItemGroup>

  <ItemGroup>
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true"
        PackagePath="analyzers/dotnet/cs" Visible="false" />
  </ItemGroup>

</Project>
